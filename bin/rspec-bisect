#!/usr/bin/env ruby

$LOAD_PATH << File.expand_path(File.join(__FILE__, "..", "..", "lib"))

require 'yaml'
require 'rspec/reducer/tree/node'

tree = YAML.load_file("tree.yml")
nodes   = tree.children
FAILURE = tree.to_a.flatten.last

def order_for(ns)
  (ns.map(&:to_a).flatten.reject{|n| n == FAILURE} + [FAILURE])
end

def search_in(nodes)
  low     = 0
  high    = nodes.length - 1
  mid     = (low + high) / 2
  while low < high do
    items = nodes[low..mid]
    File.open("order.log", "w") { |f| f.puts(order_for(items)) }
    `rspec spec/ --order specified`
    if $?.success?
      low = mid + 1
    else
      high = mid
    end
    mid = (low + high) / 2
  end
  nodes[low]
end

node = nil
loop do
  node = search_in(nodes)
  break if node.children.empty?
  nodes = node.children
end

puts node.name
